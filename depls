#!/bin/fish
#
# depls - List dependencies recursively
# onodera, https://github.com/onodera-punpun

## CONFIGURATION

# Config location
set config (cat /etc/prt.conf)


## FUNCTIONS

# This function reads the Pkgfile
function pkgfile
	if test -z $argv
		if test -f ./Pkgfile
			cat ./Pkgfile
		else
			echo 'Pkgfile not found.' >/dev/stderr
			exit 1
		end
	else
		if test -f $argv/Pkgfile
			cat $argv/Pkgfile
		else
			echo "Dependency '$argv' not found." >/dev/stderr
			exit 1
		end
	end
end

# This function prints the Pkgfile dependencies
function dependencies
	string match -r '# Depends on:.*' $argv | string replace '# Depends on:' '' | string trim | string split ' ' | string trim -c ','
end

# This function prints the dependency location
function location
	for dep in $argv
		set location (string match -r ".*/$dep\$" $ports)

		# Order ports
		if test (count $location) -ge 2
			for repo in $order
				set locationrepo (string match -r "^$repo/.*" $location)

				if test -n "$locationrepo"
					set location $locationrepo
					break
				end
			end
		end

		if test -n "$location"
			echo $location
		end
	end
end

# This function prints dependencies recursivly
function recursive
	for port in (location (dependencies (pkgfile $location)))
		# Continue if already checked
		if string match -q -r "^$port\$" $checked
			continue
		else
			set -g checked $port $checked
		end

		# Alias ports
		if string match -q -r "^$port " $alias
			set port (string match -r "^$port .*" $alias | cut -d ' ' -f 2)
		end

		# Continue if already installed
		if test $all = false
			if string match -q -r "^"(echo $port | cut -d '/' -f 2)"\$" $installed
				continue
			end
		end

		# Print tree
		if test $tree = true
			if test $iteration -ge 1
				set_color black --bold
				printf '-> %.0s' (seq $iteration)
				set_color normal
			end

			set -g iteration (math $iteration + 1)
		end

		# Finally print the port :)
		echo $port

		# Change location and loop again
		set -g location /usr/ports/$port
		recursive

		if test $tree = true
			set -g iteration (math $iteration - 1)
		end
	end
end


## EXECUTE

# Initialize values
set all false
set tree false

for flag in $argv
	switch $flag
		case -h --help
			echo -e 'Usage: depls [options]\n'
			echo 'options:'
			echo '  -a,   --all             also print installed dependencies'
			echo '  -t,   --tree            use tree view'
			echo '  -h,   --help            print help and exit'
			exit 0
		case -a --all
			set all true
		case -t --tree
			set iteration 0
			set tree true
		case '*'
			echo 'Invalid option, use -h for help.'
			exit 1
	end
end

# Get aliases and order of ports/repos
set order (string match -r '^order.*' $config | cut -d ' ' -f 2-)
set alias (string match -r '^alias.*' $config | cut -d ' ' -f 2-)

# Get all and installed ports
set ports (ports -l)
set installed (pkginfo -i | cut -d ' ' -f 1)

recursive
