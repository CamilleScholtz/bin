#!/bin/bash
#
# onodera - onodera at openmailbox dot org
# Like pkgmk but for dependencies

## CONFIGURATION

# Conig dir, make sure to use /home/username, or else it won't work with sudo/root
depmkdir="/home/onodera/etc/depmk"

## FUNCTIONS

# This function gets some basic info
info() {
	ports="$(ports -l)"
	installed="$(pkginfo -i | cut -d " " -f 1)"

	alias="$(cat "$depmkdir/alias")"
	order="$(cat "$depmkdir/order")"
}

# This function locates the Pkgfile
pkgfile() {
	if ! [[ -f "./Pkgfile" ]]; then
		echo "=======> ERROR: File 'Pkgfile' not found."
		exit 1
	else
		pkgfile="$(cat "./Pkgfile")"
	fi
}

# This function calculates the dependencies
dependency() {
	deps="$(echo "$pkgfile" | grep "^# Depends on:" | sed "s/# Depends on: *//g" | tr -d "," | tr " " "\n")"

	# Alias
	for line in $alias; do
		original="$(echo "$line" | cut -d "=" -f 1)"
		aliased="$(echo "$line" | cut -d "=" -f 2)"

		deps="$(echo "$deps" | sed "s/^$original$/$aliased/g")"
	done

	# Check which dependencies are not installed yet
	notinstalled="$(echo -e "$(echo -e "$installed\n$deps" | sort | uniq -u)\n$deps" | sort | uniq -d)"

	# Get dependencies of dependencies of depe...
	# TODO: Should I use $checked here?
	for dep in $notinstalled; do
		# Get dependency location
		location="$(echo "$ports" | grep "/$dep$")"

		# Order
		if [[ "$(echo "$location" | wc -l)" -ge 2 ]]; then
			for line in $order; do
				location="$(echo "$location" | grep "^$line/")"
				if [[ "$?" -eq 0 ]]; then
					# TODO: What does the 3 here actually do, should I change it?
					break 3
				fi
			done
		fi

		echo "$location"

		# cd to $dep location and repeat pkgfile/dependency process
		cd "/usr/ports/$location"
		pkgfile
		dependency
	done
}

# This function installs the dependencies
install() {
	for location in $installme; do
		# cd to Pkgfile location
		cd "/usr/ports/$location"

		# Install dependency
		pkgmk -d -i $options
		if [[ "$?" -ge 1 ]]; then
			exit 1
		fi
	done
}

## EXECUTE

for flag in "$@"; do
	case "$flag" in
		-h|--help)
			echo "usage: depmk [options]"
			echo "options:"
			echo "  -l,   --list                List dependencies of package"
			echo "  -if,  --ignore-footprint    build dependencies without checking footprint"
			echo "  -in,  --ignore-new          build dependencies, ignore new files in a footprint missmatch"
			echo "  -um,  --update-md5sum       update md5sum"
			echo "  -im,  --ignore-md5sum       build dependencies without checking md5sum"
			echo "  -v,   --version             print version and exit"
			echo "  -h,   --help                print help and exit"
			exit 0
			;;
		-l|--list)
			info
			pkgfile
			dependency
			exit 0
			;;
		-if|--ignore-footprint)
			options="$options -if"
			;;
		-in|--ingore-new)
			options="$options -in"
			;;
		-um|--update-md5sum)
			options="$options -um"
			;;
		-im|--ingore-md5sum)
			options="$options -im"
			;;
		-v|--version)
			echo "depmk 0.02"
			exit 0
			;;
		*)
			echo "depmk: invalid option $1"
			exit 1
			;;
	esac
done

info
pkgfile
installme="$(dependency | tac)"
install
