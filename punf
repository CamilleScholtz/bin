#!/bin/fish
#
# punf - Upload files/scrots/urls to sr.ht or punpun.xyz (rip pomf & uguu)
# onodera, https://github.com/onodera-punpun

## CONFIGURATION

# Choose host (sr.ht or punpun.xyz)
set host punpun.xyz

# Your sr.ht key
set key (cat $HOME/.srht)

# Log urls
set log false

# Set log location
set logfile $HOME/.punf

# Copy links to clipboard (requires xclip)
set clipboard true

# Send notification when upload is done (requires my notify script)
set notify true

# Open url in browser
set browser false


## FUNCTIONS

# This function sets $file to your clipboard contents
function clipboard
	set -g uploadme /tmp/clipboard.txt

	xclip -o > $uploadme

	set -g word clipboard
end

# This function sets $file to a full screen scrot
function desktop
	if test -z $DISPLAY
		echo "You are not using X right now, can't make screenshot."
		exit 1
	end

	set -g uploadme /tmp/scrot.png

	maim --hidecursor $uploadme

	set -g word desktop
end

# This function sets $file to a file
function file
	if test -f $argv
		set -g uploadme $argv
	else
		echo "File not found."
		exit 1
	end

	set -g word file
end

# This function sets $file to a selection stdin
function stdin
	set -g uploadme /tmp/stdin.txt

	cat /dev/stdin > $uploadme

	set -g word stdin
end

# This function sets $file to a selection scrot
function selection
	if test -z $DISPLAY
		echo "You are not using X right now, can't make screenshot."
		exit 1
	end

	set -g uploadme /tmp/scrot.png

	maim --hidecursor -s -b 3 -c 250,250,250 $uploadme ^ /dev/null
	if test $status -ge 1
		echo "Selection cancelled."
		exit 1
	end

	set -g word selection
end

# This function sets $file to a url
function url
	set type (echo $argv | rev | cut -d . -f 1 | rev)
	set -g uploadme /tmp/url.$type

	wget --quiet $argv -O $uploadme

	set -g word url
end

# This function uploads the $file
function upload
	switch $host
		case sr.ht
			set -g url (curl --silent -F key=$key -F file="@$uploadme" https://sr.ht/api/upload | grep -o -i "https://sr.ht/[a-z0-9._-]*")
		case punpun.xyz
			set basename (date +"%N" | md5sum | cut -c -3)
			set extension (basename $uploadme | awk -F . '{print $NF}')

			scp -q $uploadme onodera@raspun:$HOME/punpun.xyz/$basename.$extension
			if test $status -ge 1
				upload
			end
			ssh onodera@raspun chmod 0444 $HOME/punpun.xyz/$basename.$extension &

			set -g url http://punpun.xyz/$basename.$extension
	end
end

# This function logs the url,  copies the url to the clipboard, and/or opens the url in your browser
function feedback
	# Copy url to clipboard
	if test $clipboard = true -a $quiet = false
		echo $url | xclip -selection primary
		echo $url | xclip -selection clipboard
	end

	# Log url
	if test $log = true -a $quiet = false
		echo $url >> $logfile
	end

	# Open url in browser
	if test $browser = true -a $quiet = false
		$BROWSER $url
	end

	# Send notification
	if test $notify = true -a $quiet = false
		notify "Punfed $word: $url" &
	end
	
	# Send link
	if test $quiet = true
		echo $url
	else
		echo "Punfed $word: $url"
	end
end

## EXECUTE

set quiet false

if test (count $argv) -ge 1
	switch $argv[1]
		case -h --help
			echo -e "Usage: punf [options] [file/url]\n"
			echo "options:"
			echo "  -c,   --clipboard       upload your clipboard as text"
			echo "  -s,   --selection       upload selection scrot"
			echo "  -q,   --quiet           disable all feedback (for scripts using punf)"
			echo "  -h,   --help            print help and exit"
			exit 0
		case -p -c --clipboard
			clipboard
		case -s --selection
			selection
		case -q --quiet
			set quiet true
			file $argv[2]
		case "http*"
			url $argv[1]
		case "*"
			file $argv[1]
	end
else
	if test -t 0
		desktop
	else
		stdin
	end
end

upload
feedback
