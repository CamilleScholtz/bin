#!/bin/bash
#
# punf - Upload files/scrots to uguu.se/pomf.se
# onodera, https://github.com/onodera-punpun

# TODO: -s and * don't work togheter (as expected), give an error or something

## CONFIGURATION

# Log urls
log=true

# Set log dir location
logdir="$HOME/usr/img"

# Copy links to clipboard (requires xclip)
clipboard=true

# Send notification when upload is done (requires my notify script)
notify=true

# Open url in browser
browser=false


## FUNCTIONS

# This function sets $file to a selection scrot
selection() {
	uploadme="/tmp/scrot.png"

	maim --hidecursor -s -b 3 -c 250,250,250 "$uploadme" 2> "/dev/null"
	if [[ "$?" -ge 1 ]]; then
		echo "Selection cancelled."
		exit 1
	fi

	word=selection
}

# This function sets $file an url
url() {
	type="$(echo "$location" | rev | cut -d "." -f 1 | rev)"
	uploadme="/tmp/url.$type"

	wget --quiet "$location" -O "$uploadme"

	word=url
}

# This function sets $file a file
file() {
	if [[ -f "$location" ]]; then
		uploadme="$location"
	else
		echo "File not found."
		exit 1
	fi

	word=file
}

# This function sets $file to stdin
stdin() {
	stdin="$(cat "/dev/stdin")"

	uploadme="/tmp/stdin.txt"
	echo "$stdin" > "$uploadme"

	word=stdin
}

# This function sets $file to a full screen scrot
desktop() {
	uploadme="/tmp/scrot.png"

	maim --hidecursor "$uploadme"

	word=desktop
}

# This function uploads the $file
upload() {
	if [[ "$pomf" == true ]]; then
		url="$(curl --silent -F files[]="@$uploadme" "http://pomf.se/upload.php?output=gyazo")"

		if [[ "$notify" == true ]]; then
			notify "Pomfed $word: $url" & disown
		fi

		echo "Pomfed $word: $url"
	else
		url="$(curl --silent -F file="@$uploadme" "http://uguu.se/api.php?d=upload")"

		if [[ "$notify" == true ]]; then
			notify "Uguud $word: $url" & disown
		fi

		echo "Uguud $word: $url"
	fi
}

# This function logs the url,  copies the url to the clipboard, and/or opens the url in your browser
clb() {
	# Copy url to clipboard
	if [[ "$clipboard" == true ]]; then
		echo "$url" | xclip -selection primary
		echo "$url" | xclip -selection clipboard
	fi

	# Log url
	if [[ "$log" == true ]]; then
		echo "$url" >> "$logdir/punf"
	fi

	# Open url in browser
	if [[ "$browser" == true ]]; then
		$BROWSER "$url"
	fi
}


## EXECUTE

for flag in "$@"; do
	case "$flag" in
		-h|--help)
			echo "-p         permanent/pomf upload"
			echo "-s         upload selection scrot"
			echo "url        download url and upload file"
			echo "file       upload file"
			echo "           upload desktop scrot"
			exit 0
			;;
		-p)
			pomf=true
			;;
		-s)
			selection=true
			;;
		http*)
			url=true
			location="$flag"
			;;
		*)
			file=true
			location="$flag"
			;;
	esac
done

if [[ "$selection" == true ]]; then
	selection
elif [[ "$url" == true ]]; then
	url
elif [[ "$file" == true ]]; then
	file
else
	# Check if punf is connected to a pipe
	if [[ -t 0 ]]; then
		desktop
	else
		stdin
	fi
fi

upload
clb
